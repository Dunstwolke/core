const enums = @import("data-types.zig");

pub const WidgetDescriptor = struct {
    widget: []const u8,
    type: enums.WidgetType,
};
pub const widget_types = [_]WidgetDescriptor{
    .{ .widget = "Button", .type = .button },
    .{ .widget = "Label", .type = .label },
    .{ .widget = "ComboBox", .type = .combobox },
    .{ .widget = "TreeView", .type = .treeview },
    .{ .widget = "ListBox", .type = .listbox },
    .{ .widget = "Picture", .type = .picture },
    .{ .widget = "TextBox", .type = .textbox },
    .{ .widget = "CheckBox", .type = .checkbox },
    .{ .widget = "RadioButton", .type = .radiobutton },
    .{ .widget = "ScrollView", .type = .scrollview },
    .{ .widget = "ScrollBar", .type = .scrollbar },
    .{ .widget = "Slider", .type = .slider },
    .{ .widget = "ProgressBar", .type = .progressbar },
    .{ .widget = "SpinEdit", .type = .spinedit },
    .{ .widget = "Separator", .type = .separator },
    .{ .widget = "Spacer", .type = .spacer },
    .{ .widget = "Panel", .type = .panel },
    .{ .widget = "Container", .type = .container },
    .{ .widget = "TabLayout", .type = .tab_layout },
    .{ .widget = "CanvasLayout", .type = .canvas_layout },
    .{ .widget = "FlowLayout", .type = .flow_layout },
    .{ .widget = "GridLayout", .type = .grid_layout },
    .{ .widget = "DockLayout", .type = .dock_layout },
    .{ .widget = "StackLayout", .type = .stack_layout },
};

pub const PropertyDescriptor = struct {
    property: []const u8,
    value: enums.Property,
    type: enums.Type,
};
pub const properties = [_]PropertyDescriptor{
    .{ .property = "horizontal-alignment", .value = .horizontal_alignment, .type = .enumeration },
    .{ .property = "vertical-alignment", .value = .vertical_alignment, .type = .enumeration },
    .{ .property = "margins", .value = .margins, .type = .margins },
    .{ .property = "paddings", .value = .paddings, .type = .margins },
    .{ .property = "dock-site", .value = .dock_site, .type = .enumeration },
    .{ .property = "visibility", .value = .visibility, .type = .enumeration },
    .{ .property = "size-hint", .value = .size_hint, .type = .size },
    .{ .property = "font-family", .value = .font_family, .type = .enumeration },
    .{ .property = "text", .value = .text, .type = .string },
    .{ .property = "minimum", .value = .minimum, .type = .number },
    .{ .property = "maximum", .value = .maximum, .type = .number },
    .{ .property = "value", .value = .value, .type = .number },
    .{ .property = "display-progress-style", .value = .display_progress_style, .type = .enumeration },
    .{ .property = "is-checked", .value = .is_checked, .type = .boolean },
    .{ .property = "tab-title", .value = .tab_title, .type = .string },
    .{ .property = "selected-index", .value = .selected_index, .type = .integer },
    .{ .property = "columns", .value = .columns, .type = .sizelist },
    .{ .property = "rows", .value = .rows, .type = .sizelist },
    .{ .property = "left", .value = .left, .type = .integer },
    .{ .property = "top", .value = .top, .type = .integer },
    .{ .property = "enabled", .value = .enabled, .type = .boolean },
    .{ .property = "image-scaling", .value = .image_scaling, .type = .enumeration },
    .{ .property = "image", .value = .image, .type = .resource },
    .{ .property = "binding-context", .value = .binding_context, .type = .object },
    .{ .property = "child-source", .value = .child_source, .type = .objectlist },
    .{ .property = "child-template", .value = .child_template, .type = .resource },
    .{ .property = "hit-test-visible", .value = .hit_test_visible, .type = .boolean },
    .{ .property = "on-click", .value = .on_click, .type = .event },
    .{ .property = "orientation", .value = .orientation, .type = .enumeration },
    .{ .property = "widget-name", .value = .widget_name, .type = .widget },
};

pub const EnumDescriptor = struct {
    enumeration: []const u8,
    value: enums.Enum,
};
pub const enumerations = [_]EnumDescriptor{
    .{ .enumeration = "none", .value = .none },
    .{ .enumeration = "left", .value = .left },
    .{ .enumeration = "center", .value = .center },
    .{ .enumeration = "right", .value = .right },
    .{ .enumeration = "top", .value = .top },
    .{ .enumeration = "middle", .value = .middle },
    .{ .enumeration = "bottom", .value = .bottom },
    .{ .enumeration = "stretch", .value = .stretch },
    .{ .enumeration = "expand", .value = .expand },
    .{ .enumeration = "auto", .value = .auto },
    .{ .enumeration = "yesno", .value = .yesno },
    .{ .enumeration = "truefalse", .value = .truefalse },
    .{ .enumeration = "onoff", .value = .onoff },
    .{ .enumeration = "visible", .value = .visible },
    .{ .enumeration = "hidden", .value = .hidden },
    .{ .enumeration = "collapsed", .value = .collapsed },
    .{ .enumeration = "vertical", .value = .vertical },
    .{ .enumeration = "horizontal", .value = .horizontal },
    .{ .enumeration = "sans", .value = .sans },
    .{ .enumeration = "serif", .value = .serif },
    .{ .enumeration = "monospace", .value = .monospace },
    .{ .enumeration = "percent", .value = .percent },
    .{ .enumeration = "absolute", .value = .absolute },
    .{ .enumeration = "zoom", .value = .zoom },
    .{ .enumeration = "contain", .value = .contain },
    .{ .enumeration = "cover", .value = .cover },
};
